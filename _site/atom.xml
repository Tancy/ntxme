<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
   <title>Tancy/晓田</title>
   <link href="http://ntx.me/atom.xml" rel="self" type="application/atom+xml"/>
   <link href="http://ntx.me" rel="alternate" type="text/html" />
   <updated>2014-10-10T20:51:28+08:00</updated>
   <id>http://ntx.me</id>
   <author>
     <name></name>
     <email></email>
   </author>

   
   <entry>
     <title>Alimf</title>
     <link href="http://beiyuu.com/alimf"/>
     <updated>2014-10-03T00:00:00+08:00</updated>
     <id>http://beiyuu.com/alimf</id>
     <content type="html">&lt;p&gt;经过几个月的开发&lt;a href=&quot;https://alimf.com&quot; title=&quot;Alimf&quot;&gt;Alimf&lt;/a&gt;终于可以和大家见面了...&lt;/p&gt;

&lt;p&gt;Alimf是一款为前端开发同学量身定做的分析网页性能的工具让你可以直观的观看手机App中H5页面的性能问题.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://alimf.com&quot; title=&quot;Alimf.com&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/alimf/AliMF.png&quot; alt=&quot;Alimf.com&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;App UI&lt;/h2&gt;

&lt;p&gt;首先我们来看看手机App（暂时只支持iOS）的界面，操作非常简单，只要输入URL或者扫URL的二维码，点击开始，App就会启动webview运行你输入web站点从而将抓取的的数据整理成标准的HAR格式并上传到alimf站点。此时App会显示浏览分析结果的URL地址。
&lt;a href=&quot;https://alimf.com&quot; title=&quot;Alimf手机APP&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;320px&quot; src=&quot;/images/alimf/alimfapp.png&quot; alt=&quot;Alimf手机APP&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;分析概览&lt;/h2&gt;

&lt;p&gt;从app中得到结果的URL后，我们可以在浏览器中输入URL查看分析结果。下图就是分析结果的概览信息，我们可以大致了解网页的性能，如加载时间，瀑布图等。
&lt;a href=&quot;https://alimf.com&quot; title=&quot;分析概览&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/alimf/summary.png&quot; alt=&quot;分析概览&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;分析详情&lt;/h2&gt;

&lt;p&gt;为了进一步分析网页的性能情况，我们可以点击Detail查看更为详细的信息。如：每个请求的基本HTTP头部信息，加载时间，等待时间，结果信息等。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://alimf.com&quot; title=&quot;分析详情&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/alimf/detail.png&quot; alt=&quot;分析详情&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;域名列表&lt;/h2&gt;

&lt;p&gt;此页为统计了这个网页中所有请求的域名及占比情况&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://alimf.com&quot; title=&quot;域名列表&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/alimf/domains.png&quot; alt=&quot;域名列表&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;截图视图&lt;/h2&gt;

&lt;p&gt;截图的功能可以很好的反应我们的网页在每1毫秒的变化情况，可以真实感受到线上环境的加载&amp;amp;性能的体验。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://alimf.com&quot; title=&quot;截图视图&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/alimf/FilmstripView.png&quot; alt=&quot;截图视图&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;待续未完&lt;/h2&gt;

&lt;p&gt;app现在只是前期功能，后面会开发更为高级的功能，敬请期待...&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>Charles 之SSL</title>
     <link href="http://beiyuu.com/Charles-SSL"/>
     <updated>2014-07-22T00:00:00+08:00</updated>
     <id>http://beiyuu.com/Charles-SSL</id>
     <content type="html">&lt;p&gt;本次高级篇继续演示Charles的特色功能之SSL。&lt;/p&gt;

&lt;h2&gt;启用SSL Proxy&lt;/h2&gt;

&lt;p&gt;现在我们已启动一个支付宝App为例子，设置好代理。启动app后我们看到捕获的数据请求。如下：&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms04.alicdn.com/tps/i4/TB1IXuBFVXXXXXeXpXX8b0M6VXX-2126-1386.png&quot; alt=&quot;Charles 拦截请求&quot;&gt;
&lt;/div&gt;


&lt;p&gt;我们点击其中的一下请求，查看请求的详细情况，会发现导出是乱码。
这是因为支付宝使用SSL来加密应用和服务器之间的通信。要想看到其中的信息，你就需要欺骗你的手机，设置方面很简单，只需要2个步骤。&lt;/p&gt;

&lt;h3&gt;步骤1： 在你的iOS设备上安装Charles 的SSL证书&lt;/h3&gt;

&lt;p&gt;如果您使用的是iOS4或以上设备，请在您的手机浏览器中访问&lt;a href=&quot;http://charlesproxy.com/charles.crt&quot;&gt;http://charlesproxy.com/charles.crt&lt;/a&gt;，这是会启动Charles的证书安装过程。&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms03.alicdn.com/tps/i3/TB1ODquFVXXXXa0XFXXOsBu0VXX-640-679.png&quot; alt=&quot;Charles 安装SSL证书&quot;&gt;
&lt;/div&gt;


&lt;p&gt;如果想要在iOS的旧版本或其他模拟器，请查看&lt;a href=&quot;http://www.charlesproxy.com/documentation/faqs/ssl-connections-from-within-iphone-applications/&quot;&gt;Charles官方文档&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;步骤2：在Charles中配置你需要的SSL代理的域&lt;/h3&gt;

&lt;p&gt;在Charles中选择 Proxy菜单-&gt; Proxy Settings ，然后选择SSL选项卡。&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms03.alicdn.com/tps/i3/TB1QcyyFVXXXXa.XpXXib55YpXX-2124-1380.png&quot; alt=&quot;Charles 安装SSL证书&quot;&gt;
&lt;/div&gt;


&lt;p&gt;现在，您可以根据您的要求添加多个域，可以使用通配符。&lt;/p&gt;

&lt;p&gt;1.*.alipay.com&lt;/p&gt;

&lt;p&gt;2.*.google.com&lt;/p&gt;

&lt;h2&gt;再次看Charles 请求&lt;/h2&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms02.alicdn.com/tps/i2/TB1HdXUFVXXXXchaXXXqPLHOVXX-2122-1054.png&quot; alt=&quot;Charles 安装SSL证书&quot;&gt;
&lt;/div&gt;


&lt;p&gt;这时我们就能看到https的发出的请求数据。&lt;/p&gt;

&lt;p&gt;Charles还有其他有趣功能等待大家挖掘...&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>Charles 高级篇</title>
     <link href="http://beiyuu.com/Charles-Advanced"/>
     <updated>2014-07-21T00:00:00+08:00</updated>
     <id>http://beiyuu.com/Charles-Advanced</id>
     <content type="html">&lt;p&gt;基础篇讲解了Charles最常用功能代理的使用，高级篇继续演示Charles的特色有趣的功能。&lt;/p&gt;

&lt;h2&gt;网速模拟功能&lt;/h2&gt;

&lt;p&gt;throttle功能对于前端来说非常实用，可以看页面在低网速下的表现，从而找出优化的点。
在线上环境通常有些因为网速慢导致的bug，在本机无法重现，那时候就很抓瞎，如果嫌远程麻烦，推荐使用throttle。&lt;/p&gt;

&lt;p&gt;首先先配置下throttle。&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms01.alicdn.com/tps/i1/TB12wOAFVXXXXcmXXXXVcq6YpXX-2124-1384.png&quot; alt=&quot;Charles 设置Throttle&quot;&gt;
&lt;/div&gt;


&lt;p&gt;设置各种网络速率&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms04.alicdn.com/tps/i4/TB1vdqsFVXXXXcoXFXXSByXHVXX-1100-1144.png&quot; alt=&quot;Charles 设置Throttle&quot;&gt;
&lt;/div&gt;


&lt;p&gt;（Charles的预配置对于中国的网络环境并不准确，电信、移动、网通的速度还有有明显差异。）
解析下图上几个配置的含义：
Bandwidth（带宽）、Utilistation（利用百分比）、Round-trip（往返延迟）、MTU（字节）。&lt;/p&gt;

&lt;h2&gt;牛逼的断点功能&lt;/h2&gt;

&lt;p&gt;Charles另一个非常实用的功能，对于开发者和测试人员来说，堪称神器。Charles能够断到发送请求前（篡改Request）和请求后（篡改Response）。&lt;/p&gt;

&lt;p&gt;场景：ajax发送请求，我们需要测试接口的各种边界情况，比如出错、超时等表现，Charles的断点+随意篡改，非常方便测试。&lt;/p&gt;

&lt;p&gt;针对某一个请求，右键选择“BreakPoints”，开启断点。&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms02.alicdn.com/tps/i2/TB1pb5iFVXXXXaVaXXXEY0C6VXX-2126-1332.png&quot; alt=&quot;Charles 设置断点&quot;&gt;
&lt;/div&gt;


&lt;p&gt;小技巧：不用在web界面中操作，使用repeat功能，就可再次发送一样的请求：&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms01.alicdn.com/tps/i1/TB1tCWyFVXXXXXEXpXXqNZYGFXX-912-670.png&quot; alt=&quot;Charles 重新请求&quot;&gt;
&lt;/div&gt;


&lt;h3&gt;断点列表查看&lt;/h3&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms03.alicdn.com/tps/i3/TB1.iylFVXXXXayaXXXJcUmOVXX-2122-1382.png&quot; alt=&quot;Charles 断点列表&quot;&gt;
&lt;/div&gt;


&lt;p&gt;可以指定断点“get”请求还是“post”请求。&lt;/p&gt;

&lt;h2&gt;重复发送请求&lt;/h2&gt;

&lt;p&gt;repeat功能对于测试同学特别有用，可以检验接口的健壮性。
repeat功对于前端的价值是不需要刷新页面，只需要repeat请求，比如检验代理是否成功，修改请求后执行等。&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms01.alicdn.com/tps/i1/TB1tCWyFVXXXXXEXpXXqNZYGFXX-912-670.png&quot; alt=&quot;Charles 重复请求&quot;&gt;
&lt;/div&gt;


&lt;p&gt;“repeat”重复发送一次请求。&lt;/p&gt;

&lt;p&gt;“repeat Advances”可以自定义重复次数和重复间隔。&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms02.alicdn.com/tps/i2/TB1hfGpFVXXXXczXFXXI.IF6XXX-1434-956.png&quot; alt=&quot;Charles 自定义重复次数和重复间隔&quot;&gt;
&lt;/div&gt;


&lt;h2&gt;捕获记录控制&lt;/h2&gt;

&lt;p&gt;捕获的请求太多，容易产生干扰，Charles可以对捕获记录进行过滤。&lt;/p&gt;

&lt;p&gt;然后配置“exclude”：&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms03.alicdn.com/tps/i3/TB1SImyFVXXXXcRXXXX6aMrIXXX-2128-1380.png&quot; alt=&quot;Charles 记录过滤&quot;&gt;
&lt;/div&gt;


&lt;h2&gt;web界面&lt;/h2&gt;

&lt;p&gt;Charles有个有趣的web界面：&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms02.alicdn.com/tps/i2/TB1Jk5pFVXXXXcTXFXXXpwU2VXX-1096-1034.png&quot; alt=&quot;Charles 记录过滤&quot;&gt;
&lt;/div&gt;


&lt;p&gt;强大的是可以控制是否远程可以访问这个界面，还可以设置用户名和密码…碉堡了…&lt;/p&gt;

&lt;p&gt;浏览器输入http://control.charles/ ：&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms01.alicdn.com/tps/i1/TB14YKiFVXXXXXPaXXXoKiP5pXX-1644-934.png&quot; alt=&quot;Charles 记录过滤&quot;&gt;
&lt;/div&gt;


&lt;p&gt;Charles还有其他有趣功能等待大家挖掘...&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>Charles 基础篇</title>
     <link href="http://beiyuu.com/Charles-Base"/>
     <updated>2014-07-18T00:00:00+08:00</updated>
     <id>http://beiyuu.com/Charles-Base</id>
     <content type="html">&lt;p&gt;Charles是目前最强大的http调试工具之一，在界面和功能上远强于Fiddler，同时是全平台支持，堪称神器，唯一的缺陷是这软件是收费的，而且是要$50美金…&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms01.alicdn.com/tps/i1/TB1kJ5uFVXXXXXAXpXXrJ1vVXXX-1304-621.png&quot; alt=&quot;Charles 启动画面&quot;&gt;
&lt;/div&gt;


&lt;p&gt;启动后，神器启动画面。&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms03.alicdn.com/tps/i3/TB1HYmwFVXXXXcLXXXXZBIoIVXX-2246-1300.png&quot; alt=&quot;Charles 主界面&quot;&gt;
&lt;/div&gt;


&lt;p&gt;神器主界面。
Charles有个会话（session，不是指http中的session）的概念，可以理解为浏览器中的tab，这个功能在需要调试多个站点页面时很实用，当你刷新页面的时候，只会在当前session中捕获请求。
（PS：MacOS 下command+N创建个新的session，command+W关闭当前session）
Charles的代理服务器启动就可以使用（会提示给firefox安装插件），如果没有捕获到请求，请清理下浏览器缓存。&lt;/p&gt;

&lt;h2&gt;界面功能初探&lt;/h2&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms04.alicdn.com/tps/i4/TB1E4CyFVXXXXXMXXXXOh7JIVXX-2246-1444.png&quot; alt=&quot;Charles 界面功能概览&quot;/&gt;
&lt;/div&gt;


&lt;p&gt;工具条包含了Charles的大部分功能：&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms02.alicdn.com/tps/i2/TB1o9ayFVXXXXb0XXXXl47zIVXX-2246-1360.png&quot; alt=&quot;Charles 界面功能概览&quot;/&gt;
&lt;/div&gt;


&lt;p&gt;有几个功能比较抽象，后面会详细说明。
右键请求出现菜单，Charles的右键菜单功能比fiddler强大太多了。&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms01.alicdn.com/tps/i1/TB1iD1rFVXXXXasXFXXiAt_5pXX-642-1234.png&quot; alt=&quot;Charles 快捷菜单&quot;/&gt;
&lt;/div&gt;


&lt;p&gt;双击请求进入列表视图，类似fiddler，方便查看和过滤请求。&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms03.alicdn.com/tps/i3/TB1XIKfFVXXXXcGaXXXn577ZVXX-2188-1428.png&quot; alt=&quot;Charles 搜索&amp;详情&quot;/&gt;
&lt;/div&gt;


&lt;p&gt;Charles的过滤查找功能非常赞，很快速：请求详情跟fiddler相似，但直观不少：工具视图基本讲解完毕，接下来我们用Charles做点事情。&lt;/p&gt;

&lt;h2&gt;代理配置&lt;/h2&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms04.alicdn.com/tps/i4/TB1sJimFVXXXXbIXVXX0IBa0pXX-1444-1054.png&quot; alt=&quot;Charles 代理设置&quot;/&gt;
&lt;/div&gt;


&lt;h2&gt;本地代理和远程代理&lt;/h2&gt;

&lt;p&gt;Charles的代理服务器端口跟fiddler一样都是8888，即你的本机ip:8888。&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms03.alicdn.com/tps/i3/TB1hZysFVXXXXXFXFXXDLxq5XXX-2254-1432.png&quot; alt=&quot;Charles 搜索&amp;详情&quot;/&gt;
&lt;/div&gt;


&lt;p&gt;我们可以目标将一个文件代理成本地的文件。点击“Map Local”后：&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms03.alicdn.com/tps/i3/TB1hZysFVXXXXXFXFXXDLxq5XXX-2254-1432.png&quot; alt=&quot;Charles Map Local&quot;/&gt;
&lt;/div&gt;


&lt;p&gt;刷新页面试试。代理成功，so easy！&lt;/p&gt;

&lt;p&gt;Charles的树状视图比fiddler的列表视图好的地方在于，多次刷新后的请求会被归纳到树里面，更加一目了然，用fiddler的时候，有点强迫症的同学，都要点击clear，有木有…
Charles是支持子目录代理哦，非常实用的功能：（使用通配符*）&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms03.alicdn.com/tps/i3/TB1BqiwFVXXXXbmXpXXA3IeJFXX-1246-872.png&quot; alt=&quot;Charles 目录代理&quot;/&gt;
&lt;/div&gt;


&lt;p&gt;本地地址选择个子目录，不需要通配符。
如何判断是否代理成功呢？&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms03.alicdn.com/tps/i3/TB1aNqsFVXXXXXZXFXXXss1_VXX-2130-1342.png&quot; alt=&quot;Charles notes&quot;/&gt;
&lt;/div&gt;


&lt;p&gt;这点Charles比fiddler人性化多了。
校验是否代理成功，最省力的方式是点击工具条上的刷新按钮，刷新单个请求，如果代理成功，Charles会往“Notes”界面打个log。&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms02.alicdn.com/tps/i2/TB1LKOsFVXXXXcpXpXXkrcY_VXX-2130-1324.png&quot; alt=&quot;Charles notes&quot;/&gt;
&lt;/div&gt;


&lt;p&gt;去除代理配置&lt;/p&gt;

&lt;p&gt;小技巧：所有的配置开关都可以通过工具条上的“工具”设置（倒数第二个按钮）。&lt;/p&gt;

&lt;p&gt;小技巧：建议开启No Caching，不缓存请求。&lt;/p&gt;

&lt;h2&gt;mobile代理功能&lt;/h2&gt;

&lt;p&gt;手机或平板页面的调试，我们需要把请求代理到pc端的Charles上。
必须确保mobile端和pc端连的是相同的无线网络。
ios的配置非常简单&lt;/p&gt;

&lt;div&gt;
    &lt;img style=&quot;width: 100%;&quot; src=&quot;http://gtms04.alicdn.com/tps/i4/TB1Z8WqFVXXXXXiXFXXr6RC8VXX-1280-1136.png&quot; alt=&quot;Charles ios网络&quot;/&gt;
&lt;/div&gt;


&lt;p&gt;服务器ip设置成pc的ip，端口好设置成8888即可。
然后mobile终端可以刷新试试。&lt;/p&gt;

&lt;p&gt;Charles支持https和sockets的代理，还支持SSL，非常全面。&lt;/p&gt;
</content>
   </entry>
   
 
</feed>
